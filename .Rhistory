year1 = "1"
year2 = "1stYear"
} else if (year == "b") {
year1 = "5"
year2 = "5thYear"
} else if (year == "c") {
year1 = "10"
year2 = "10thYear"
} else if (year == "z") {
year1 = "0"
year2 = "0thYear"
}
year="a"
if (year == "a") {
year1 = "1"
year2 = "1stYear"
} else if (year == "b") {
year1 = "5"
year2 = "5thYear"
} else if (year == "c") {
year1 = "10"
year2 = "10thYear"
} else if (year == "z") {
year1 = "0"
year2 = "0thYear"
}
if (type == "e") {
type1 = "Entre"
incomePercentile <- "incomeEntrepreneurPercentile"
wealthPercentile <- "wealthEntrepreneurPercentile"
fam_wealthPercentile <- "fam_wealthEntrepreneurPercentile"
} else if (type == "f") {
type1 = "FB"
incomePercentile <- "incomeFBPercentile"
wealthPercentile <- "wealthFBPercentile"
fam_wealthPercentile <- "fam_wealthFBPercentile"
}
mean <- paste0("mean", topic, year1)
var <- paste0("var", topic, year1)
data_list
data_list$f_ROALvIncIncome
mean <- paste0("mean", topic, year1)
var <- paste0("var", topic, year1)
mean
var
fig_1 <- ggplot(
data_list$f_ROALvIncIncome,
aes(x = incomePercentile, y = mean)) +
geom_line(group = 1, color = "blue") +
geom_point(size = 1, color = "blue") +
geom_errorbar(aes(
ymin = mean - sd(var),
ymax = mean + sd(var)
), width = 0.5)
library(ggplot2)
library(ggpubr)
fig_1 <- ggplot(
data_list$f_ROALvIncIncome,
aes(x = incomePercentile, y = mean)) +
geom_line(group = 1, color = "blue") +
geom_point(size = 1, color = "blue") +
geom_errorbar(aes(
ymin = mean - sd(var),
ymax = mean + sd(var)
), width = 0.5)
fig_1
data_list$f_ROALvIncIncome
sd(var)
sd(data_list$f_ROALvIncIncome$var)
data_list$f_ROALvIncIncome$var
data_list$f_ROALvIncIncome$varROA1
fig_1 <- ggplot(
data_list$f_ROALvIncIncome,
aes(x = incomePercentile, y = mean)) +
geom_line(group = 1, color = "blue") +
geom_point(size = 1, color = "blue") +
geom_errorbar(aes(
ymin = !!sym(mean) - sd(!!sym(var)),
ymax = !!sym(mean) + sd(!!sym(var))
), width = 0.5)
fig_1
mean <- paste0("mean", topic, year1)
var <- paste0("var", topic, year1)
fig_1 <- ggplot(
data_list$f_ROALvIncIncome,
aes(x = incomePercentile, y = !!sym(mean))) +
geom_line(group = 1, color = "blue") +
geom_point(size = 1, color = "blue") +
geom_errorbar(aes(
ymin = !!sym(mean) - sd(!!sym(var)),
ymax = !!sym(mean) + sd(!!sym(var))
), width = 0.5)
fig_1
mean <- paste0("mean", topic, year1)
var <- paste0("var", topic, year1)
fig_1 <- ggplot(
data_list$f_ROALvIncIncome,
aes(x = !!sym(incomePercentile), y = !!sym(mean))) +
geom_line(group = 1, color = "blue") +
geom_point(size = 1, color = "blue") +
geom_errorbar(aes(
ymin = !!sym(mean) - sd(!!sym(var)),
ymax = !!sym(mean) + sd(!!sym(var))
), width = 0.5)
fig_1
incomePercentile <- "incomeFBPercentile"
fig_1 <- ggplot(
data_list$f_ROALvIncIncome,
aes(x = !!sym(incomePercentile), y = !!sym(mean))) +
geom_line(group = 1, color = "blue") +
geom_point(size = 1, color = "blue") +
geom_errorbar(aes(
ymin = !!sym(mean) - sd(!!sym(var)),
ymax = !!sym(mean) + sd(!!sym(var))
), width = 0.5)
fig_1
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
rm(ls=list())
rm(ls==list())
rm(list = ls())
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
data <- fread("data/fullData.csv")
data <- as.data.table(lapply(data, function(col) as.numeric(as.character(col))))
data <- subset(data, year >= 1991)
# 刪除 month 為 NA 的行
data <- data[!is.na(data$month), ]
View(data)
data <- subset(data, year < 2024)
View(data)
data <- data[!is.na(data$month), ]
# 確認資料框中有年份欄位
if (!"year" %in% names(data)) {
stop("資料中缺少年份 (year) 欄位")
}
View(data)
rm(list = ls())
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
# 讀取資料
data <- fread("data/fullData.csv")
data <- as.data.table(lapply(data, function(col) as.numeric(as.character(col))))
data <- subset(data, year >= 1991)
data <- subset(data, year < 2024)
# 刪除 month 為 NA 的行
data <- data[!is.na(data$month), ]
# 確認資料框中有年份欄位
if (!"year" %in% names(data)) {
stop("資料中缺少年份 (year) 欄位")
}
#計算total volue
data$total_value <- rowSums(data[, c("FruitVegetableJuice_value", "CarbonatedBeverage_value",
"SportsDrink_value", "CoffeeDrink_value", "TeaDrink_value")])
# 設定價格欄位
priceCols <- c("FruitVegetableJuice_price", "CarbonatedBeverage_price",
"SportsDrink_price", "CoffeeDrink_price", "TeaDrink_price")
# 設定需求數量（需求份額）欄位
quantityCols <- c("FruitVegetableJuice_share", "CarbonatedBeverage_share",
"SportsDrink_share", "CoffeeDrink_share", "TeaDrink_share")
# 設定總所得欄位
incomeCol <- c("total_value", "AvgHouseholdDisposableIncome", "LowestQuantileIncome", "SecondLowestQuantileIncome",
"MiddleQuantileIncome", "SecondHighestQuantileIncome", "HighestQuantileIncome")
rm(list = ls())
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
# 讀取資料
data <- fread("data/fullData.csv")
data <- as.data.table(lapply(data, function(col) as.numeric(as.character(col))))
data <- subset(data, year >= 1991)
data <- subset(data, year < 2024)
# 刪除 month 為 NA 的行
data <- data[!is.na(data$month), ]
# 確認資料框中有年份欄位
if (!"year" %in% names(data)) {
stop("資料中缺少年份 (year) 欄位")
}
#計算total volue
data$total_value <- rowSums(data[, c("FruitVegetableJuice_value", "CarbonatedBeverage_value",
"SportsDrink_value", "CoffeeDrink_value", "TeaDrink_value")])
valueCols <- c("FruitVegetableJuice_value", "CarbonatedBeverage_value",
"SportsDrink_value", "CoffeeDrink_value", "TeaDrink_value")
# 設定價格欄位
priceCols <- c("FruitVegetableJuice_price", "CarbonatedBeverage_price",
"SportsDrink_price", "CoffeeDrink_price", "TeaDrink_price")
# 設定需求數量（需求份額）欄位
shareCols <- c("FruitVegetableJuice_share", "CarbonatedBeverage_share",
"SportsDrink_share", "CoffeeDrink_share", "TeaDrink_share")
# 設定總所得欄位
incomeCol <- c("total_value", "AvgHouseholdDisposableIncome", "LowestQuantileIncome", "SecondLowestQuantileIncome",
"MiddleQuantileIncome", "SecondHighestQuantileIncome", "HighestQuantileIncome")
rm(list = ls())
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
# 讀取資料
data <- fread("data/fullData.csv")
data <- as.data.table(lapply(data, function(col) as.numeric(as.character(col))))
data <- subset(data, year >= 1991)
data <- subset(data, year < 2024)
# 刪除 month 為 NA 的行
data <- data[!is.na(data$month), ]
# 確認資料框中有年份欄位
if (!"year" %in% names(data)) {
stop("資料中缺少年份 (year) 欄位")
}
# 設定數量欄位
quantityCols <- c("FruitVegetableJuice_volumn", "CarbonatedBeverage_volumn",
"SportsDrink_volumn", "CoffeeDrink_volumn", "TeaDrink_volumn")
# 設定價格欄位
priceCols <- c("FruitVegetableJuice_price", "CarbonatedBeverage_price",
"SportsDrink_price", "CoffeeDrink_price", "TeaDrink_price")
# 設定價值欄位
valueCols <- c("FruitVegetableJuice_value", "CarbonatedBeverage_value",
"SportsDrink_value", "CoffeeDrink_value", "TeaDrink_value")
# 設定需求數量（需求份額）欄位
shareCols <- c("FruitVegetableJuice_share", "CarbonatedBeverage_share",
"SportsDrink_share", "CoffeeDrink_share", "TeaDrink_share")
# 設定總所得欄位
incomeCol <- c("total_value", "AvgHouseholdDisposableIncome", "LowestQuantileIncome", "SecondLowestQuantileIncome",
"MiddleQuantileIncome", "SecondHighestQuantileIncome", "HighestQuantileIncome")
#計算total volue
data$total_value <- rowSums(data[, valueCols])
View(data)
#計算total volue
data$total_value <- rowSums(data[, valueCols])
valueCols
#計算total volue
data$total_value <- rowSums(data[, ..valueCols])
#計算total volue
data$total_value <- rowSums(data[, ..valueCols])
# 保留需要的欄位
fullData <- subset(data, selest = c(priceCols, shareCols, incomeCol))
fullData <- subset(data, select = c(priceCols, shareCols, incomeCol))
required_cols <- c(priceCols, shareCols, incomeCol[1])
fullData <- subset(data, select = required_cols)
fullData <- as.data.table(data)
fullData[, FruitVegetableJuice_share := FruitVegetableJuice_value/get(incomeCol[1])]
fullData[, CarbonatedBeverage_share := CarbonatedBeverage_value/get(incomeCol[1])]
fullData[, SportsDrink_share := SportsDrink_value/get(incomeCol[1])]
fullData[, CoffeeDrink_share := CoffeeDrink_value/get(incomeCol[1])]
fullData[, TeaDrink_share := TeaDrink_value/get(incomeCol[1])]
#計算份額
fullData <- as.data.table(data)
fullData[, FruitVegetableJuice_share := FruitVegetableJuice_value/total_value]
fullData[, CarbonatedBeverage_share := CarbonatedBeverage_value/total_value]
fullData[, SportsDrink_share := SportsDrink_value/total_value]
fullData[, CoffeeDrink_share := CoffeeDrink_value/total_value]
fullData[, TeaDrink_share := TeaDrink_value/total_value]
required_cols <- c(priceCols, shareCols, incomeCol[1])
fullData <- subset(data, select = required_cols)
required_cols <- c(priceCols, shareCols, incomeCol[1])
fullData <- subset(fullData, select = required_cols)
# 檢查數據中是否有 NA 並處理
if (sum(is.na(fullData)) > 0) {
fullData <- na.omit(fullData)
message("數據中含有 NA，已移除缺失值。")
}
incomeCol[1]
aids_model <- aidsEst(
priceNames = priceCols,
shareNames = shareCols,
totExpName = incomeCol[1],
data = fullData, priceIndex = "S")
summary(aids_model)
# 進行 LAAIDS 模型估計
laaids_model <- aidsEst(
priceNames = priceCols,
shareNames = shareCols,
totExpName = incomeCol[1],
data = fullData, priceIndex = "S", method = "LA")
summary(laaids_model)
rm(list = ls())
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
# 讀取資料
data <- fread("data/fullData.csv")
data <- as.data.table(lapply(data, function(col) as.numeric(as.character(col))))
data <- subset(data, year >= 1991)
data <- subset(data, year < 2024)
# 刪除 month 為 NA 的行
data <- data[!is.na(data$month), ]
# 確認資料框中有年份欄位
if (!"year" %in% names(data)) {
stop("資料中缺少年份 (year) 欄位")
}
# 設定數量欄位
quantityCols <- c("FruitVegetableJuice_volumn", "CarbonatedBeverage_volumn",
"SportsDrink_volumn", "CoffeeDrink_volumn", "TeaDrink_volumn")
# 設定價格欄位
priceCols <- c("FruitVegetableJuice_price", "CarbonatedBeverage_price",
"SportsDrink_price", "CoffeeDrink_price", "TeaDrink_price")
# 設定價值欄位
valueCols <- c("FruitVegetableJuice_value", "CarbonatedBeverage_value",
"SportsDrink_value", "CoffeeDrink_value", "TeaDrink_value")
# 設定需求數量（需求份額）欄位
shareCols <- c("FruitVegetableJuice_share", "CarbonatedBeverage_share",
"SportsDrink_share", "CoffeeDrink_share", "TeaDrink_share")
# 設定總所得欄位
incomeCol <- c("total_value", "AvgHouseholdDisposableIncome", "LowestQuantileIncome", "SecondLowestQuantileIncome",
"MiddleQuantileIncome", "SecondHighestQuantileIncome", "HighestQuantileIncome")
#計算total volue
data$total_value <- rowSums(data[, ..valueCols])
# 保留需要的欄位
# # 確保只對數值型變數計算相關性
# numeric_cols <- sapply(fullData, is.numeric)
# # 計算數值型變數的相關性矩陣
# correlation_matrix <- cor(fullData[, numeric_cols], use = "complete.obs")
#計算份額
fullData <- as.data.table(data)
fullData[, FruitVegetableJuice_share := FruitVegetableJuice_value/total_value]
fullData[, CarbonatedBeverage_share := CarbonatedBeverage_value/total_value]
fullData[, SportsDrink_share := SportsDrink_value/total_value]
fullData[, CoffeeDrink_share := CoffeeDrink_value/total_value]
fullData[, TeaDrink_share := TeaDrink_value/total_value]
# fullData[, FruitVegetableJuice_share := FruitVegetableJuice_value/get(incomeCol[1])]
# fullData[, CarbonatedBeverage_share := CarbonatedBeverage_value/get(incomeCol[1])]
# fullData[, SportsDrink_share := SportsDrink_value/get(incomeCol[1])]
# fullData[, CoffeeDrink_share := CoffeeDrink_value/get(incomeCol[1])]
# fullData[, TeaDrink_share := TeaDrink_value/get(incomeCol[1])]
required_cols <- c(priceCols, shareCols, incomeCol[5])
fullData <- subset(fullData, select = required_cols)
fullData <- subset(fullData, select = required_cols)
c(priceCols, shareCols, incomeCol[5])
rm(list = ls())
# 安裝和載入所需的套件
# install.packages("micEconAids")
library(micEconAids)
library(readxl)
library(dplyr)
library(data.table)
library(ggplot2)
# 設定工作目錄
user <- Sys.info()["user"]
if (user == "brianhjli"){
setwd("/Users/brianhjli/Dropbox/113-1/Research Methodology/DSE-5")
} else if (user == "QQ"){
setwd("C:/Users/QQ/Dropbox/DSE-5")
} else if (user == "hayashijikyou"){
setwd("/Users/hayashijikyou/Library/CloudStorage/Dropbox/DSE-5")
} else {
warning("使用者名稱為空，請檢查檔案路徑！")
}
# 讀取資料
data <- fread("data/fullData.csv")
data <- as.data.table(lapply(data, function(col) as.numeric(as.character(col))))
data <- subset(data, year >= 1991)
data <- subset(data, year < 2024)
# 刪除 month 為 NA 的行
data <- data[!is.na(data$month), ]
# 確認資料框中有年份欄位
if (!"year" %in% names(data)) {
stop("資料中缺少年份 (year) 欄位")
}
# 設定數量欄位
quantityCols <- c("FruitVegetableJuice_volumn", "CarbonatedBeverage_volumn",
"SportsDrink_volumn", "CoffeeDrink_volumn", "TeaDrink_volumn")
# 設定價格欄位
priceCols <- c("FruitVegetableJuice_price", "CarbonatedBeverage_price",
"SportsDrink_price", "CoffeeDrink_price", "TeaDrink_price")
# 設定價值欄位
valueCols <- c("FruitVegetableJuice_value", "CarbonatedBeverage_value",
"SportsDrink_value", "CoffeeDrink_value", "TeaDrink_value")
# 設定需求數量（需求份額）欄位
shareCols <- c("FruitVegetableJuice_share", "CarbonatedBeverage_share",
"SportsDrink_share", "CoffeeDrink_share", "TeaDrink_share")
# 設定總所得欄位
incomeCol <- c("total_value", "AvgHouseholdDisposableIncome", "LowestQuintileIncome", "SecondLowestQuintileIncome",
"MiddleQuintileIncome", "SecondHighestQuintileIncome", "HighestQuintileIncome")
#計算total volue
data$total_value <- rowSums(data[, ..valueCols])
# 保留需要的欄位
# # 確保只對數值型變數計算相關性
# numeric_cols <- sapply(fullData, is.numeric)
# # 計算數值型變數的相關性矩陣
# correlation_matrix <- cor(fullData[, numeric_cols], use = "complete.obs")
#計算份額
fullData <- as.data.table(data)
fullData[, FruitVegetableJuice_share := FruitVegetableJuice_value/total_value]
fullData[, CarbonatedBeverage_share := CarbonatedBeverage_value/total_value]
fullData[, SportsDrink_share := SportsDrink_value/total_value]
fullData[, CoffeeDrink_share := CoffeeDrink_value/total_value]
fullData[, TeaDrink_share := TeaDrink_value/total_value]
# fullData[, FruitVegetableJuice_share := FruitVegetableJuice_value/get(incomeCol[1])]
# fullData[, CarbonatedBeverage_share := CarbonatedBeverage_value/get(incomeCol[1])]
# fullData[, SportsDrink_share := SportsDrink_value/get(incomeCol[1])]
# fullData[, CoffeeDrink_share := CoffeeDrink_value/get(incomeCol[1])]
# fullData[, TeaDrink_share := TeaDrink_value/get(incomeCol[1])]
required_cols <- c(priceCols, shareCols, incomeCol[5])
fullData <- subset(fullData, select = required_cols)
# 檢查數據中是否有 NA 並處理
if (sum(is.na(fullData)) > 0) {
fullData <- na.omit(fullData)
message("數據中含有 NA，已移除缺失值。")
}
# # 確認需要的欄位是否存在
# missing_cols <- setdiff(required_cols, names(fullData))
# if (length(missing_cols) > 0) {
#   stop(paste("以下欄位缺失:", paste(missing_cols, collapse = ", ")))
# }
# 進行 AIDS 模型估計
aids_model <- aidsEst(
priceNames = priceCols,
shareNames = shareCols,
totExpName = incomeCol[5],
data = fullData, priceIndex = "S")
summary(aids_model)
write.csv(as.data.frame(aids_model$coef$alpha), "outcome/output_1018_aids_alpha.csv", row.names=FALSE)
write.csv(as.data.frame(aids_model$coef$beta), "outcome/output_1018_aids_beta", row.names=FALSE)
write.csv(as.data.frame(aids_model$coef$gamma), "outcome/output_1018_aids_gamma", row.names=FALSE)
# 進行 LAAIDS 模型估計
laaids_model <- aidsEst(
priceNames = priceCols,
shareNames = shareCols,
totExpName = incomeCol[5],
data = fullData, priceIndex = "S", method = "LA")
summary(laaids_model)
